# Main Nginx configuration
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # Performance settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 10M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=ai:10m rate=2r/s;

    # Upstream definitions
    upstream x_monitoring {
        server x-monitoring:3000;
        keepalive 32;
    }

    upstream ai_analysis {
        server ai-analysis:8000;
        keepalive 32;
    }

    upstream trade_bot {
        server trade-bot:3002;
        keepalive 32;
    }

    upstream notification_service {
        server notification-service:3003;
        keepalive 32;
    }

    upstream trading_orchestrator {
        server trading-orchestrator:3004;
        keepalive 32;
    }

    # Main server block
    server {
        listen 80;
        server_name localhost;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # X-Monitoring Service Routes
        location /api/x-monitoring/ {
            limit_req zone=api burst=20 nodelay;
            
            # Remove the /api/x-monitoring prefix
            rewrite ^/api/x-monitoring/(.*)$ /$1 break;
            
            proxy_pass http://x_monitoring;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # AI Analysis Service Routes (with stricter rate limiting)
        location /api/ai-analysis/ {
            limit_req zone=ai burst=5 nodelay;
            
            # Remove the /api/ai-analysis prefix
            rewrite ^/api/ai-analysis/(.*)$ /$1 break;
            
            proxy_pass http://ai_analysis;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Trade Bot Service Routes
        location /api/trade-bot/ {
            limit_req zone=api burst=20 nodelay;
            
            # Remove the /api/trade-bot prefix
            rewrite ^/api/trade-bot/(.*)$ /$1 break;
            
            proxy_pass http://trade_bot;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Default route - return API info
        location / {
            return 200 '{"service":"X-Monitoring API Gateway","version":"1.0.0","status":"running"}';
            add_header Content-Type application/json;
        }

        # Error pages
        error_page 404 /404.json;
        location = /404.json {
            return 404 '{"error":"Not Found","message":"The requested resource was not found"}';
            add_header Content-Type application/json;
        }

        error_page 500 502 503 504 /50x.json;
        location = /50x.json {
            return 500 '{"error":"Internal Server Error","message":"Something went wrong"}';
            add_header Content-Type application/json;
        }
    }
}
